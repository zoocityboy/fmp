{
	"publisher": "hci.gma",
	"private": true,
	"name": "studio",
	"displayName": "GMA Studio",
	"description": "Settings for GMA Extension. Extension works with GMAT",
	"version": "0.0.5-beta.2",
	"icon": "resources/images/gma_light.png",
	"author": {
		"name": "Lukas Svoboda",
		"email": "e-lukas.svoboda@homecredit.eu"
	},
	"bugs": {
		"url": "http://github.com/zoocityboy/fmp/issues",
		"email": "sean@contoso.com"
	},
	"repository": {
		"type": "git",
		"url": "git@github.com:zoocityboy/fmp.git"
	},
	"homepage": "https://github.com/zoocityboy/fmp/blob/main/gma_extension/README.md",
	"extensionKind": [
		"ui"
	],
	"capabilities": {
		"untrustedWorkspaces": {
			"supported": true
		},
		"virtualWorkspaces": {
			"supported": false,
			"description": "In virtual workspaces, resolving and finding references across files is not supported."
		}
	},
	"engines": {
		"npm": ">=8.0.0",
		"vscode": "^1.62.0"
	},
	"categories": [
		"Other",
		"Azure",
		"Debuggers"
	],
	"activationEvents": [
		"workspaceContains:gma.yaml",
		"onStartupFinished"
	],
	"main": "./dist/main.js",
	"contributes": {
		"taskDefinitions": [
			{
				"type": "dart",
				"required": [
					"name",
					"description",
					"run"
				],
				"properties": {
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"run": {
						"type": "array"
					}
				}
			},
			{
				"type": "dart",
				"required": [
					"flavor",
					"app"
				],
				"properties": {
					"flavor": {
						"type": "string",
						"description": "Short flavor tag Indian Fake [fakein]"
					},
					"app": {
						"type": "string",
						"description": "App folder Customer [capp]"
					}
				}
			}
		],
		"disabled-walkthroughs": [
			{
				"id": "gma_walkthrough",
				"title": "Getting started with GMA Project",
				"description": "Quick start with GMA project",
				"steps": [
					{
						"id": "newworkspace",
						"title": "Brand new Workspace",
						"description": "This step will run a command and check off once it has been run.\n[Show workspace](command:gma.wt.showWorkspace)",
						"media": {
							"image": "resources/wt/workspace.png",
							"altText": "Empty image"
						},
						"markdown": "resources/wt/settings.md",
						"completionEvents": [
							"onCommand:gma.wt.showWorkspace"
						]
					},
					{
						"id": "recommended",
						"title": "Recommended",
						"description": "We choose great plugins which helps you with development.\n[Show workspace](command:gma.wt.runRecommended)",
						"media": {
							"image": "resources/wt/recommended.png",
							"altText": "Empty image"
						},
						"markdown": "resources/wt/settings.md",
						"completionEvents": [
							"onCommand:gma.wt.runRecommended"
						]
					},
					{
						"id": "flavors",
						"title": "Change flavor",
						"description": "We prepare easy solution for changing flavors.\n[Change Flavor](command:gma.wt.runChangeFlavor)",
						"media": {
							"image": "resources/wt/recommended.png",
							"altText": "Empty image"
						},
						"markdown": "resources/wt/settings.md",
						"completionEvents": [
							"onCommand:gma.wt.runChangeFlavor"
						]
					},
					{
						"id": "widgetcatalog",
						"title": "Change Setting",
						"description": "This step will change a setting and check off when the setting has changed\n[Change Setting](command:getting-started-sample.changeSetting)",
						"media": {
							"markdown": "resources/wt/settings.md"
						},
						"completionEvents": [
							"onSettingChanged:gma_start.sampleSetting"
						]
					},
					{
						"id": "documentation",
						"title": "Read our documentation.",
						"description": "This step will change a setting and check off when the setting has changed\n[Change Setting](command:getting-started-sample.changeSetting)",
						"media": {
							"markdown": "resources/wt/settings.md"
						},
						"completionEvents": [
							"onSettingChanged:gma_start.sampleSetting"
						]
					}
				],
				"configuration": {
					"title": "Getting started with GMA Project",
					"properties": {
						"gma.wt.newworkspace": {
							"description": "Sample setting",
							"type": "boolean"
						},
						"gma.wt.recommended": {
							"description": "Sample setting",
							"type": "boolean"
						},
						"gma.wt.flavors": {
							"description": "Sample setting",
							"type": "boolean"
						},
						"gma.wt.widgetcatalog": {
							"description": "Sample setting",
							"type": "boolean"
						},
						"gma.wt.documentation": {
							"description": "Sample setting",
							"type": "boolean"
						}
					}
				}
			}
		],
		"configuration": [
			{
				"title": "GMA",
				"description": "Select current flavor for running.",
				"type": "object",
				"properties": {
					"gma.workspaceFolders.add": {
						"type": "array",
						"description": "Workspace folders to be added after app flaver changed.",
						"items": {
							"type": "string"
						}
					},
					"gma.workspaceFolders.ignore": {
						"type": "array",
						"description": "Workspace folders to be ignored in preset for flavor.",
						"items": {
							"type": "string"
						}
					},
					"gma.custom.workspaceFolders": {
						"type": "array",
						"description": "Workspace folders to be added after app flaver changed.",
						"items": {
							"type": "string"
						}
					},
					"gma.build.selectedApplication": {
						"type": "string",
						"description": "Apps to show in the flavor",
						"default": "self_care",
						"enum": [
							"self_care",
							"mapp"
						],
						"enumDescription": [
							"Customer application well known as CAPP",
							"Merchant application well known as MAPP"
						]
					},
					"gma.build.selectedStage": {
						"type": "string",
						"description": "Stages used as flavor",
						"default": "prod",
						"enum": [
							"prod",
							"fake"
						],
						"enumDescription": [
							"Production will be connected to the public APIs.",
							"Fake will work offline, with mocked API responses."
						]
					},
					"gma.build.selectedCountry": {
						"type": "string",
						"description": "App published in country",
						"default": "in",
						"enum": [
							"in",
							"vn",
							"ph",
							"id"
						],
						"enumDescription": [
							"India",
							"Vietnam",
							"Philippines",
							"Indonesia"
						]
					}
				},
				"default": {
					"gma.custom.workspaceFolders": [],
					"gma.build.selectedApplication": "self_care",
					"gma.build.selectedStage": "prod",
					"gma.build.selectedCountry": "in"
				}
			}
		],
		"commands": [
			{
				"category": "GMA",
				"command": "gma.commands.buildRunner.build",
				"title": "Re-build package",
				"description": "Build the project",
				"icon": "$(debug-restart-frame)"
			},
			{
				"category": "GMA",
				"command": "gma.commands.buildRunner.watch",
				"title": "Watch re-builder",
				"enablement": "false",
				"icon": "$(wand)"
			},
			{
				"category": "GMA",
				"command": "gma.commands.buildRunner.terminate",
				"title": "terminate",
				"enablement": "false",
				"icon": "$(debug-stop)"
			},
			{
				"category": "GMA",
				"command": "gma.commands.server.show",
				"title": "Show app",
				"icon": "$(globe)",
				"enablement": "false"
			},
			{
				"category": "GMA",
				"command": "gma.commands.server.start",
				"title": "Start server",
				"icon": "$(debug-start)"
			},
			{
				"category": "GMA",
				"command": "gma.commands.server.stop",
				"title": "Stop server",
				"icon": "$(debug-stop)"
			},
			{
				"category": "GMA",
				"command": "gma.commands.explorer.addToFolders",
				"title": "Add to workspace folders",
				"enablement": "true",
				"shortTitle": "Add",
				"icon": "$(pencil)"
			},
			{
				"category": "GMA",
				"command": "gma.commands.explorer.addRootToFolders",
				"title": "Add Project to workspace folders",
				"enablement": "true",
				"icon": "$(pencil)"
			},
			{
				"command": "gma.commands.explorer.plugins.refresh",
				"category": "GMA",
				"title": "Refresh plugins"
			},
			{
				"command": "gma.commands.explorer.project.refresh",
				"category": "GMA",
				"title": "Refresh project"
			},
			{
				"category": "GMA",
				"command": "gma.commands.commandRunner",
				"title": "Run pre-defined commands",
				"description": "Comands are defined in gma.yaml as Runners.",
				"enablement": "true",
				"icon": "$(pencil)"
			},
			{
				"category": "GMA",
				"command": "gma.commands.update.studio",
				"title": "Run update",
				"description": "Update on the lastest version.",
				"enablement": "true",
				"icon": "$(pencil)"
			},
			{
				"category": "GMA",
				"command": "dart.createProject",
				"title": "Create new package",
				"description": "Create new package",
				"enablement": "true",
				"icon": "$(new-file)"
			}
		],
		"viewsContainers": {
			"activitybar": [
				{
					"id": "gma-activity",
					"title": "GMA Tooling",
					"icon": "resources/images/koyal_icon.svg",
					"order": 1
				}
			],
			"panel": [
				{
					"id": "gma-panel",
					"title": "GMA Tooling",
					"icon": "resources/images/koyal_icon.svg"
				}
			]
		},
		"views": {
			"gma-activity": [
				{
					"id": "gma:views:buildrunner",
					"name": "Project build runners",
					"type": "tree"
				},
				{
					"id": "gma:views:servers",
					"name": "Flutter Web App",
					"contextualTitle": "Flutter Web App",
					"type": "tree"
				}
			],
			"explorer": [
				{
					"id": "gma:views:plugins",
					"name": "Plugins",
					"contextualTitle": "Plugins folder of GMA Project",
					"type": "tree",
					"visibility": "collapsed",
					"order": 0
				},
				{
					"id": "gma:views:project",
					"name": "Project",
					"contextualTitle": "Root folder of GMA Project",
					"type": "tree",
					"visibility": "collapsed",
					"order": 1
				},
				{
					"id": "gma:views:documentation",
					"name": "Documentation",
					"contextualTitle": "GMA Documentation",
					"type": "tree",
					"visibility": "collapsed",
					"order": 2
				},
				{
					"id": "gma:views:cicd",
					"name": "CI/CD",
					"contextualTitle": "Shared Azure Pipelines",
					"type": "tree",
					"visibility": "collapsed",
					"order": 3
				},
				{
					"id": "gma:views:help",
					"name": "Help & Quick links",
					"contextualTitle": "Help & Quick links",
					"type": "tree",
					"order": 6,
					"visibility": "visible"
				}
			]
		},
		"menus": {
			"commandPalette": [
				{
					"command": "gma.commands.update.studio",
					"when": "false"
				},
				{
					"command": "gma.commands.buildRunner.build",
					"when": "false"
				},
				{
					"command": "gma.commands.buildRunner.watch",
					"when": "false"
				},
				{
					"command": "gma.commands.buildRunner.terminate",
					"when": "false"
				},
				{
					"command": "gma.commands.server.show",
					"when": "false"
				},
				{
					"command": "gma.commands.server.start",
					"when": "false"
				},
				{
					"command": "gma.commands.server.stop",
					"when": "false"
				},
				{
					"command": "gma.commands.explorer.addToFolders",
					"when": "false"
				},
				{
					"command": "gma.commands.explorer.addRootToFolders",
					"when": "false"
				},
				{
					"command": "gma.commands.explorer.plugins.refresh",
					"when": "false"
				},
				{
					"command": "gma.commands.explorer.project.refresh",
					"when": "false"
				},
				{
					"command": "dart.createProject",
					"when": "false"
				}
			],
			"view/title": [
				{
					"command": "dart.createProject",
					"when": "view == gma:views:plugins",
					"group": "navigation"
				},
				{
					"command": "gma.commands.explorer.addRootToFolders",
					"when": "view == gma:views:project",
					"group": "navigation"
				}
			],
			"explorer/context": [
				{
					"command": "gma.commands.buildRunner.build",
					"group": "z_commands",
					"when": "resourceFilename == pubspec.yaml"
				},
				{
					"command": "gma.commands.buildRunner.watch",
					"group": "z_commands",
					"when": "resourceFilename == pubspec.yaml"
				}
			],
			"view/item/context": [
				{
					"command": "gma.commands.explorer.addToFolders",
					"group": "inline",
					"when": "view == gma:views:plugins || view == gma:views:project && viewItem == directory"
				},
				{
					"command": "gma.commands.server.show",
					"when": "view == gma:views:servers"
				},
				{
					"command": "gma.commands.server.start",
					"when": "view == gma:views:servers && viewItem == server_stoped",
					"group": "inline"
				},
				{
					"command": "gma.commands.server.stop",
					"when": "view == gma:views:servers && viewItem == server_running",
					"group": "inline"
				},
				{
					"command": "gma.commands.buildRunner.watch",
					"when": "viewItem == folder && view == gma:views:buildrunner",
					"group": "inline"
				},
				{
					"command": "gma.commands.buildRunner.watch",
					"when": "view == gma:views:buildrunner && viewItem == file",
					"group": "inline"
				},
				{
					"command": "gma.commands.buildRunner.build",
					"when": "view == gma:views:buildrunner && viewItem == file",
					"group": "inline"
				}
			]
		},
		"submenus": []
	},
	"scripts": {
		"vscode:prepublish": "npm run esbuild-base -- --minify",
		"esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=dist/main.js --external:vscode --format=cjs --platform=node",
		"esbuild": "npm run esbuild-base -- --sourcemap",
		"esbuild-watch": "npm run esbuild-base -- --sourcemap --watch",
		"test-compile": "tsc -p ./",
		"compile": "tsc -p ./",
		"lint": "eslint src --ext .js,.jsx,.ts,.tsx",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"test": "node ./out/test/runTest.js",
		"doc": "./node_modules/.bin/typedoc --entryPointStrategy expand ./src --out docs src/index.ts"
	},
	"devDependencies": {
		"@types/js-yaml": "^4.0.5",
		"@types/mkdirp": "^1.0.2",
		"@types/mocha": "^9.0.0",
		"@types/node": "^16.11.7",
		"@types/rimraf": "^3.0.2",
		"@types/semver": "^7.3.9",
		"@types/vscode": "^1.62.0",
		"@types/yaml": "^1.9.7",
		"@typescript-eslint/eslint-plugin": "^5.4.0",
		"@typescript-eslint/parser": "^5.4.0",
		"@vscode/codicons": "0.0.26",
		"esbuild": "^0.13.15",
		"eslint": "^8.3.0",
		"eslint-config-prettier": "^8.3.0",
		"glob": "^7.2.0",
		"mocha": "^9.1.3",
		"typedoc": "^0.22.9",
		"typedoc-plugin-markdown": "^3.11.7",
		"typescript": "^4.5.2",
		"vscode-test": "^1.6.1"
	},
	"dependencies": {
		"js-yaml": "^4.1.0",
		"mkdirp": "^1.0.4",
		"path": "^0.12.7",
		"pidtree": "^0.5.0",
		"prettier": "^2.4.1",
		"rimraf": "^3.0.2",
		"semver": "^7.3.5",
		"semver-compare": "^1.0.0",
		"tslib": "^2.3.1",
		"yaml": "^1.10.2"
	}
}
