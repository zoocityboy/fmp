{
	"publisher": "aol27cuew27wkrbzzq6djpcii6wqib6ejy3y56y2lfp2yspeiyyq",
	"private": true,
	"name": "gma",
	"displayName": "GMA Extensions",
	"description": "GMA Extensions",
	"repository": "http://github.com/zoocityboy/fmp",
	"version": "0.0.1",
	"icon": "media/images/koyal_icon.png",
	"engines": {
		"vscode": "^1.46.0"
	},
	"extensionDependencies": [
		"Dart-Code.dart-code"
	],
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onLanguage:dart",
		"workspaceContains:**/gma.yaml"
	],
	"main": "./out/extension.js",
	"contributes": {
		"taskDefinitions": [
			{
				"type": "dart",
				"required": [
					"flavor",
					"app"
				],
				"properties": {
					"flavor": {
						"type": "string",
						"description": "Short flavor tag Indian Fake [fakein]"
					},
					"app": {
						"type": "string",
						"description": "App folder Customer [capp]"
					}
				}
			}
		],
		"walkthroughs": [
			{
				"id": "gma_walkthrough",
				"title": "Getting started with GMA Project",
				"description": "Quick start with GMA project",
				"steps": [
					{
						"id": "newworkspace",
						"title": "Brand new Workspace",
						"description": "This step will run a command and check off once it has been run.\n[Show workspace](command:gma.wt.showWorkspace)",
						"media": {
							"image": "media/wt/workspace.png",
							"altText": "Empty image"
						},
						"markdown": "media/wt/settings.md",
						"completionEvents": [
							"onCommand:gma.wt.showWorkspace"
						]
					},
					{
						"id": "recommended",
						"title": "Recommended",
						"description": "We choose great plugins which helps you with development.\n[Show workspace](command:gma.wt.runRecommended)",
						"media": {
							"image": "media/wt/recommended.png",
							"altText": "Empty image"
						},
						"markdown": "media/wt/settings.md",
						"completionEvents": [
							"onCommand:gma.wt.runRecommended"
						]
					},
					{
						"id": "flavors",
						"title": "Change flavor",
						"description": "We prepare easy solution for changing flavors.\n[Change Flavor](command:gma.wt.runChangeFlavor)",
						"media": {
							"image": "media/wt/recommended.png",
							"altText": "Empty image"
						},
						"markdown": "media/wt/settings.md",
						"completionEvents": [
							"onCommand:gma.wt.runChangeFlavor"
						]
					},
					{
						"id": "widgetcatalog",
						"title": "Change Setting",
						"description": "This step will change a setting and check off when the setting has changed\n[Change Setting](command:getting-started-sample.changeSetting)",
						"media": {
							"markdown": "media/wt/settings.md"
						},
						"completionEvents": [
							"onSettingChanged:gma_start.sampleSetting"
						]
					},
					{
						"id": "documentation",
						"title": "Read our documentation.",
						"description": "This step will change a setting and check off when the setting has changed\n[Change Setting](command:getting-started-sample.changeSetting)",
						"media": {
							"markdown": "media/wt/settings.md"
						},
						"completionEvents": [
							"onSettingChanged:gma_start.sampleSetting"
						]
					}
				],
				"configuration": {
					"title": "Getting started with GMA Project",
					"properties": {
						"gma.wt.newworkspace": {
							"description": "Sample setting",
							"type": "boolean"
						},
						"gma.wt.recommended": {
							"description": "Sample setting",
							"type": "boolean"
						},
						"gma.wt.flavors": {
							"description": "Sample setting",
							"type": "boolean"
						},
						"gma.wt.widgetcatalog": {
							"description": "Sample setting",
							"type": "boolean"
						},
						"gma.wt.documentation": {
							"description": "Sample setting",
							"type": "boolean"
						}
					}
				}
			}
		],
		"configuration": [
			{
				"title": "GMA Studio",
				"type": "object",
				"properties": {
					"gma.flavor.apps": {
						"type": "array",
						"items": {
							"type": "object"
						}
					},
					"gma.flavor.stages": {
						"type": "array",
						"items": {
							"type": "object"
						}
					},
					"gma.flavor.countries": {
						"type": "array",
						"items": {
							"type": "object"
						}
					}
				}
			}
		],
		"commands": [
			{
				"title": "Show Widget Catalog",
				"shortTitle": "WidgetCatalog",
				"command": "gma.flavor.showCatalog",
				"category": "GMA"
			},
			{
				"title": "Show Dynamic Forms Playground",
				"shortTitle": "Dynamic Playground",
				"command": "gma.flavor.showDynamicPlayground",
				"category": "GMA"
			},
			{
				"category": "GMA",
				"command": "gma.flavor.changeApp",
				"title": "Select application",
				"shortTitle": "Application"
			},
			{
				"category": "GMA",
				"command": "gma.flavor.changeCountry",
				"title": "Select country",
				"shortTitle": "Country"
			},
			{
				"category": "GMA",
				"command": "gma.flavor.changeStage",
				"title": "Select stage",
				"shortTitle": "Stage"
				
			},
			{
				"category": "gma.build-runner",
				"command": "gma.build_runner.build",
				"title": "build",
				"icon": "$(extensions-refresh)"
			},
			{
				"category": "gma.build-runner",
				"command": "gma.build_runner.watch",
				"title": "watch",
				"icon": "$(variables-view-icon)"
			},
			{
				"category": "gma.build-runner",
				"command": "gma.build_runner.terminate",
				"title": "terminate",
				"icon": "$(debug-stop)"
			}
		],
		"viewsContainers": {
			"activitybar": [
				{
					"id": "gma-activity",
					"title": "GMA Tools",
					"icon": "media/images/koyal_icon.svg"
				}
			]
		},
		"views": {
			"gma-activity": [
				{
					"id": "gma_web_servers_view",
					"name": "Servers",
					"contextualTitle": "Servers"

				},
				{
					"id": "gma_build_runner_view",
					"name": "Project build runners",
					"type": "tree"
				}
			]
		},
		"viewsWelcome": [
			{
				"view": "gma_web_servers_view",
				"contents": "[Widget Catalog](command:gma.flavor.showCatalog)"
			},
			{
				"view": "gma_web_servers_view",
				"contents": "[Dynamic Forms Playground](command:gma.flavor.showDynamicFormsPlayground)"
			}
		],
		"menus": {
			"commandPalette": [
				{
					"command": "gma.build_runner.watch",
					"when": "false"
				},
				{
					"command": "gma.build_runner.build",
					"when": "false"
				},
				{
					"command": "gma.build_runner.terminate",
					"when": "false"
				}
			],
			"view/item/context": [
				{
					"command": "gma.build_runner.watch",
					"when": "view == gma_build_runner_view && viewItem == file",
					"group": "inline"
				},
				{
					"command": "gma.build_runner.build",
					"when": "view == gma_build_runner_view && viewItem == file",
					"group": "inline"
				}
			]
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"lint": "eslint src --ext ts",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/glob": "^7.1.3",
		"@types/mocha": "^8.0.0",
		"@types/node": "^14.0.27",
		"@types/vscode": "^1.46.0",
		"@typescript-eslint/eslint-plugin": "^4.1.1",
		"@typescript-eslint/parser": "^4.1.1",
		"@vscode/codicons": "0.0.21",
		"eslint": "^7.9.0",
		"glob": "^7.1.6",
		"mocha": "^8.1.3",
		"typescript": "^4.4.2",
		"vscode-test": "^1.4.0"
	},
	"dependencies": {
		"pidtree": "^0.5.0",
		"yaml": "^1.10.2"
	}
}
